using System.Collections;
using System.Collections.Generic;
using Assets.Scripts.PlayerLogic;
using UnityEngine;

public class Invulnerability : MonoBehaviour
{
    private SpriteRenderer rend;
    private Color color;
    private int currentHealth;   
    private Player player;
    private bool isImmune = false;
    public bool IsImmune { get => isImmune; set => value = isImmune;}
    private WaitForSeconds blink;
    [SerializeField] float duration;
    [SerializeField] bool isBlinking;
    

    void Start()
    {
        player = GetComponent<Player>();
        rend = GetComponent<SpriteRenderer>();
        color = rend.color;
        currentHealth = GetComponent<Health>().HealthCount;

        blink = new WaitForSeconds(duration / 40f);

        Physics2D.IgnoreLayerCollision(8, 9, false);
        Physics2D.IgnoreLayerCollision(8, 11, false);
    }

   public void GetInvulnerability()
    {
        StartCoroutine(InvulnerabilityCoroutine());
    }

    // Игнорим слои с врагами и ловушками
    public IEnumerator InvulnerabilityCoroutine() {
        Physics2D.IgnoreLayerCollision(8,9, true);
        Physics2D.IgnoreLayerCollision(8,11, true);       
        isImmune = true;
        if(isBlinking)
            StartCoroutine(BlinkingSprite());

        yield return new WaitForSeconds(duration);
        
        Physics2D.IgnoreLayerCollision(8, 9, false);
        Physics2D.IgnoreLayerCollision(8, 11, false);       
        isImmune = false;
    }

    // Мерцание спрайта, чтобы не занимать анимацию
    IEnumerator BlinkingSprite()
    {
        for(int i=0; i<20; i++)
        {
            color.a = 0.1f;
            rend.color = color;
            yield return blink;
            color.a = 1f;
            rend.color = color;
            yield return blink;
        }
    }
}
